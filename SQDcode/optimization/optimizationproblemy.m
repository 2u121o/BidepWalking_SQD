clear all
generate_references;
%% Parameters
g = 9.81;       %gravitational acceleration
zc = 0.8;       %CoM height 
Ts = 5e-3;      %Sampling time
P = 1500;


%Dynamical model of lip + extension
A = [[0 1 0];[0 0 1];[0 0 0];];
B = [0 0 1]';
C = [1 0 -zc/g];
D = 0;
lip_y = ss(A,B,C,D);   

lip_y.InputName = 'dddy';               %CoM jerk
lip_y.StateName = {'y', 'dy', 'ddy'};   %stete: CoM position velocity acceleration
lip_y.OutputName = {'py'};              %ZMP position

%Discrete dynamical model
lip_y_d = c2d(lip_y,Ts);


%% create MPC controller object with sample time
mpc1 = mpc(lip_y_d, 0.005);
%% specify prediction horizon
mpc1.PredictionHorizon = 800;
%% specify control horizon
mpc1.ControlHorizon = 800;
%% specify nominal values for inputs and outputs
mpc1.Model.Nominal.U = 0;
mpc1.Model.Nominal.Y = 0;
%% specify weights
% mpc1.Weights.MV = 0;
% mpc1.Weights.MVRate = 0.1;
% mpc1.Weights.OV = 1;
% mpc1.Weights.ECR = 100000;
%% specify simulation options
options = mpcsimopt();
options.RefLookAhead = 'on';
options.MDLookAhead = 'off';
options.Constraints = 'on';
options.OpenLoop = 'off';
options.Model = lip_y;
%% run simulation
%yy  --> Sequence of controlled plant outputs
%u   --> Sequence of manipulated variables generated by the MPC controller
%xpy --> Sequence of plant model states
[yy,~,u,xpy] =sim(mpc1, 1501, prefy(1,1:P+1)', [], options);


%%-----------------------------PLOT----------------------------------------

figure()
plot(prefy(1,1:P+1)')
hold on
plot(xpy(:,1))
hold on
plot(yy)
legend('ZMP_{yref}','CoM_{ypos}','ZMP_y');
grid();
